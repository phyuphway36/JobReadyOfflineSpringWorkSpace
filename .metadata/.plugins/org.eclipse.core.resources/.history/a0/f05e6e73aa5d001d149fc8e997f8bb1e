package com.hostmdy.demo.controller;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.HashSet;
import java.util.Set;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.ui.Model;

import com.hostmdy.demo.controllers.IndexController;
import com.hostmdy.demo.domain.Recipe;
import com.hostmdy.demo.services.RecipeService;

class IndexControllerTest {

	@Mock
	RecipeService recipeService;
	
	@Mock
	Model model;
	
	IndexController controller;
	
	@BeforeEach
	void setUp() throws Exception {
		MockitoAnnotations.initMocks(this);
		controller = new IndexController(recipeService);
				
	}

	@Test
	void getIndexPage() {
		Recipe recipe1 = new Recipe();
		Recipe recipe2 = new Recipe();
		recipe2.setId(10L);
		
		Set<Recipe> recipeData = new HashSet<>();
		recipeData.add(recipe1);
		recipeData.add(recipe2);
		
		when((recipeService).getRecipes()).thenReturn(recipeData);
		ArgumentCaptor<Set<Recipe>> captor = ArgumentCaptor.forClass(Set.class);
		//Set<Recipe> recipes = recipeService.getRecipes();
		
		String viewName = controller.getIndexPage(model);
		
		verify(recipeService,times(1)).getRecipes();
		verify(model,times(1)).addAllAttribute(eq("recipes"),captor.capture());
		//verify(model.addAttribute(eq("recipes"),captor.capture()));
		//assertEquals(recipes.size(), 2);
		assertEquals(viewName, "index");
	}

}
